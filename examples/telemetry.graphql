type Query {
  posts: [Post] @http(url: "http://jsonplaceholder.typicode.com/posts") @cache(maxAge: 3000)
  user(id: Int!): User @http(url: "http://jsonplaceholder.typicode.com/users/{{.args.id}}")
  users: [User] @http(url: "http://jsonplaceholder.typicode.com/users")
  news: NewsData! @grpc(url: "http://localhost:50051", method: "news.NewsService.GetAllNews")
}

type User {
  id: Int!
  name: String!
  username: String!
  email: String!
  phone: String
  website: String
}

type Post {
  id: Int!
  userId: Int!
  title: String!
  body: String!
  user: User @http(url: "http://jsonplaceholder.typicode.com/users/{{.value.userId}}")
}

type News {
  id: Int
  title: String
  body: String
  postImage: String
  status: Status
}

enum Status {
  PUBLISHED
  DRAFT
  DELETED
}

type NewsData {
  news: [News]
}
