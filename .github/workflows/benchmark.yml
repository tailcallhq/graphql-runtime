name: benchmark

on:
  pull_request:
    types: [opened, synchronize, labeled]
    branches:
      - main

  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to run benchmark on"
        required: true
        default: "main"

jobs:
  benchmark:
    name: Macro Benchmarks
    if: contains(github.event.pull_request.labels.*.name, 'benchmark')
    runs-on: benchmarking-runner
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Run tailcall
        run: |
          ./target/release/tailcall start ci-benchmark/benchmark.graphql&

      - name: Install Nginx
        run: |
          sudo apt-get update
          sudo apt-get install -y nginx

      - name: Clean Up
        run: |
          sudo rm -rf /etc/nginx/sites-enabled/default

      - name: Copy Nginx Configuration
        working-directory: ci-benchmark
        run: |
          sudo cp nginx.conf /etc/nginx/

      - name: Test Nginx Configuration
        run: |
          sudo nginx -t

      - name: Start Nginx
        run: |
          sudo systemctl start nginx

      - name: Install wrk
        run: |
          sudo apt-get install -y wrk

      - name: Run test query
        run: |
          curl -i -X POST -d '{"query": "{posts{title}}"}' http://localhost:8000/graphql -H "Content-Type: application/json"

      - id: run_wrk
        name: Run wrk
        working-directory: ci-benchmark
        run: |
          wrk -d 30 -t 1 -c 100 -s wrk.lua http://localhost:8000/graphql > wrk-output.txt

      - id: convert_wrk_output_markdown
        name: Convert output to markdown
        working-directory: ci-benchmark
        run: |
          node wrk-output-to-md.js wrk-output.txt > wrk-output.md

      - id: cat_md
        name: cat md
        working-directory: ci-benchmark
        run: |
          cat wrk-output.md

      - id: get_comment_body
        name: Get comment body
        working-directory: ci-benchmark
        run: |
          body="$(cat wrk-output.md)"
          delimiter="$(openssl rand -hex 8)"
          echo "body<<$delimiter" >> $GITHUB_OUTPUT
          echo "$body" >> $GITHUB_OUTPUT
          echo "$delimiter" >> $GITHUB_OUTPUT

      - name: Create commit comment
        uses: peter-evans/commit-comment@v3
        with:
          sha: ${{github.event.pull_request.head.sha}}
          body: ${{steps.get_comment_body.outputs.body}}
