name: Release Drafter

on:
  push:
    branches:
      - main
  # pull_request_target event is required for autolabeler to support PRs from forks
  # it's ok to do so until we do not checkout and build any external code
  pull_request_target:
    types: [opened, reopened, synchronize]

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: release-drafter.yml

  Track_and_Cache_Benchmarks:
    name: Track and Cache Micro Benchmarks
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main')
    permissions:
      pull-requests: write
      contents: write
    runs-on: benchmarking-runner
    env:
      BENCHER_PROJECT: tailcall
      BENCHER_ADAPTER: rust_criterion
      BENCHER_TESTBED: benchmarking-runner
      BASE_BENCHMARK_RESULTS: benches/base.txt
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install Bencher CLI
        uses: bencherdev/bencher@main

      - name: Run and track Benchmarks
        run: |
          cargo bench > benches/base.txt
          bencher run \
          --project "$BENCHER_PROJECT" \
          --branch main \
          --testbed "$BENCHER_TESTBED" \
          --token "${{ secrets.BENCHER_API_TOKEN }}" \
          --adapter "$BENCHER_ADAPTER" \
          --file "$BASE_BENCHMARK_RESULTS"

      - name: Cache Criterion Benchmarks
        uses: actions/cache@v4
        with:
          path: benches/base.txt
          key: criterion_benchmarks_${{ github.sha }}
