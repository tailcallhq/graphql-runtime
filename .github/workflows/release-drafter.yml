name: Release Drafter

on:
  push:
    branches:
      - main
  # pull_request_target event is required for autolabeler to support PRs from forks
  # it's ok to do so until we do not checkout and build any external code
  pull_request_target:
    types: [opened, reopened, synchronize]

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: release-drafter.yml

  Criterion_Compare:
    name: Comparing Micro Benchmarks
    runs-on: benchmarking-runner
    permissions:
      pull-requests: write
      contents: write
    env:
      BENCHER_PROJECT: tailcall
      BENCHER_ADAPTER: rust_criterion
      BENCHER_TESTBED: benchmarking-runner
      PR_BENCHMARK_RESULTS: benches/change.txt
      BASE_BENCHMARK_RESULTS: benches/base.txt
      BRANCH_NAME: ${{ github.head_ref }}_commit_${{ github.event.pull_request.head.sha }}
      UPPER_BOUNDARY: 0.10
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Restore file
        uses: actions/cache@v4
        with:
          path: benches/base.txt
          key: criterion_benchmarks_799d08df5260b225d326b1c064ad6ff1109933bf
          fail-on-cache-miss: true

      - name: Run Benchmarks
        run: |
          cargo bench > benches/change.txt

      - name: Install Bencher CLI
        uses: bencherdev/bencher@main

      - name: Track base benchmarks
        run: |
          bencher run \
          --if-branch "$BRANCH_NAME" \
          --else-branch \
          --token "${{ secrets.BENCHER_API_TOKEN }}" \
          --file "$BASE_BENCHMARK_RESULTS"

      - name: Create PR threshold
        run: |
          bencher threshold create \
          --branch "$BRANCH_NAME" \
          --testbed "$BENCHER_TESTBED" \
          --measure latency \
          --test percentage \
          --upper-boundary ${{ env.UPPER_BOUNDARY }} \
          --token "${{ secrets.BENCHER_API_TOKEN }}"

      - name: Track PR Benchmarks
        run: |
          bencher run \
          --branch "$BRANCH_NAME" \
          --token "${{ secrets.BENCHER_API_TOKEN }}" \
          --github-actions "${{ secrets.GITHUB_TOKEN }}" \
          --err \
          --file "$PR_BENCHMARK_RESULTS"
