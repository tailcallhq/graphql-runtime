# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']

permissions:
  contents: read

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.11]
        java: [temurin@20]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@20)
        if: matrix.java == 'temurin@20'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 20
          cache: sbt

      - name: Check that workflows are up to date
        run: sbt '++ ${{ matrix.scala }}' githubWorkflowCheck

      - name: Setup Mysql
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: 8.0
          mysql user: tailcall_main_user
          mysql database: tailcall_main_db
          mysql password: tailcall

      - name: Build project
        run: sbt '++ ${{ matrix.scala }}' test

      - name: Lint
        if: matrix.scala == '2.13.11'
        run: sbt '++ ${{ matrix.scala }}' lintCheck

      - name: Compress target directories
        run: tar cf targets.tar registry/target server/target target registry-client/target test-utils/target cli/target runtime/target project/target

      - name: Upload target directories
        uses: actions/upload-artifact@v3
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
          path: targets.tar

  dockerStage:
    name: Docker Stage
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.11]
        java: [temurin@20]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v3

      - run: sbt Docker/stage

  deploy:
    name: Deploy
    needs: [dockerStage]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.11]
        java: [temurin@20]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v3

      - run: cp ./fly.toml ./target/docker/stage/

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --remote-only ./target/docker/stage/ --wait-timeout 300

  dockerPublish:
    name: Docker Publish
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.10]
        java: [temurin@8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - uses: aws-actions/amazon-ecr-login@v1
        with:
          aws-region: us-east-1

      - uses: docker/build-push-action@v2
        with:
          context: ./target/docker/stage/
          push: true
          tags: '629064393226.dkr.ecr.us-east-1.amazonaws.com/tc-eks-ecr:latest'

  release:
    name: Release
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.11]
        java: [temurin@20]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v3

      - id: create_release
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml

      - name: Universal Stage
        env:
          APP_VERSION: ${{steps.create_release.outputs.name}}
        run: sbt Universal/stage

      - uses: TheDoctor0/zip-release@0.7.1
        with:
          type: zip
          filename: tailcall-${{steps.create_release.outputs.name}}.zip
          directory: target/universal/stage
          exclusions: '*.git*, .metals'

      - uses: xresloader/upload-to-github-release@v1
        with:
          release_id: ${{steps.create_release.outputs.id}}
          file: target/universal/stage/tailcall-${{steps.create_release.outputs.name}}.zip
          overwrite: true
