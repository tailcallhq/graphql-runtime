name: build

on:
  push:
    branches: [main]
  pull_request:

jobs:
  check:
    name: Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Format code
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    needs: check
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  release:
    name: Release
    needs: [check]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [ macos ]
        include:
          - build: apple-silicon
            os: macos-latest
            rust: stable
            target: aarch64-apple-darwin
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
            cross: false
    permissions:
      contents: write
      pull-requests: write
    env:
      GITHUB_TOKEN: ${{secrets.GITHUBTOKEN}}

    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v4

      - id: create_release
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml

      - name: Install correct toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          use-cross: ${{ matrix.cross }}
          override: true
      - name: build
        env:
          APP_VERSION: ${{steps.create_release.outputs.name}}
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Rename binary with target name
        run: mv target/${{ matrix.target }}/release/tailcall target/${{ matrix.target }}/release/tailcall-${{ matrix.target }}
      - name: Upload ${{ matrix.target }} Binary
        uses: xresloader/upload-to-github-release@v1
        with:
          release_id: ${{steps.create_release.outputs.id}}
          file: target/${{ matrix.target }}/release/tailcall-${{ matrix.target }}
          overwrite: true
