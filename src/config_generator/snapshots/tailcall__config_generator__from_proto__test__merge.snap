---
source: src/config_generator/from_proto.rs
expression: result
---
schema @server @upstream {
  query: Query
}

input Author {
  email: String
  name: String
}

input HelloRequest {
  name: String
}

input MultipleNewsId {
  ids: [NewsId]
}

input News {
  author: Author
  body: String
  foo: Status
  id: Int
  postImage: String
  title: String
}

input NewsId {
  id: Int
}

enum Status {
  DRAFT
  PUBLISHED
}

type HelloReply {
  message: String
}

type NewsList {
  news: [News]
}

type Query {
  addNews(news: News!): News! @grpc(method: "news.NewsService.AddNews")
  deleteNews(newsId: NewsId!): String @grpc(method: "news.NewsService.DeleteNews")
  editNews(news: News!): News! @grpc(method: "news.NewsService.EditNews")
  getAllNews: NewsList! @grpc(method: "news.NewsService.GetAllNews")
  getMultipleNews(multipleNewsId: MultipleNewsId!): NewsList! @grpc(method: "news.NewsService.GetMultipleNews")
  getNews(newsId: NewsId!): News! @grpc(method: "news.NewsService.GetNews")
  sayHello(helloRequest: HelloRequest!): HelloReply! @grpc(method: "greetings_dup.Greeter.SayHello")
}
