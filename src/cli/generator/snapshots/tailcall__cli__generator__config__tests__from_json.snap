---
source: src/cli/generator/config.rs
expression: "&config"
---
Config {
    input: [
        Input {
            source: Import {
                src: "../protobuf/news.proto",
                _marker: PhantomData<tailcall::cli::generator::config::UnResolved>,
            },
        },
        Input {
            source: Config {
                src: "../configs/user-posts.graphql",
                _marker: PhantomData<tailcall::cli::generator::config::UnResolved>,
            },
        },
        Input {
            source: Import {
                src: "https://jsonplaceholder.typicode.com/posts",
                _marker: PhantomData<tailcall::cli::generator::config::UnResolved>,
            },
        },
    ],
    output: Output {
        format: GraphQL,
        file: "./output.graphql",
        phantom: PhantomData<tailcall::cli::generator::config::UnResolved>,
    },
    generate: GenerateOptions {
        schema: Schema {
            query: "Query",
            mutation: "Mutation",
        },
    },
    transform: Transform {
        ambiguous_name_resolver: Some(
            Object {
                "inputPrefix": String("IN"),
                "outputPrefix": String("OUT"),
                "inputPostFix": String("IN"),
                "outputPostFix": String("OUT"),
            },
        ),
        merge_types: Some(
            Object {
                "threshold": Number(0.9),
            },
        ),
        js: Some(
            Object {
                "source": String("transformer.js"),
                "functionName": String("transform"),
            },
        ),
    },
    _marker: PhantomData<tailcall::cli::generator::config::UnResolved>,
}
