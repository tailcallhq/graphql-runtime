---
source: src/core/generator/generator.rs
expression: config.to_sdl()
---
schema @server @upstream {
  query: Query
}

type Dimension {
  depth: Int
  height: Int
  width: Int
}

type Meum {
  barcode: String
  createdAt: String
  qrCode: String
  updatedAt: String
}

type Product {
  availabilityStatus: String
  brand: String
  category: String
  description: String
  dimensions: Dimension
  discountPercentage: Int
  id: Int
  images: [String]
  meta: Meum
  minimumOrderQuantity: Int
  price: Int
  rating: Int
  returnPolicy: String
  reviews: [Review]
  shippingInformation: String
  sku: String
  stock: Int
  tags: [String]
  thumbnail: String
  title: String
  warrantyInformation: String
  weight: Int
}

type Query {
  f1(p1: Int!): [RootType1] @http(baseURL: "https://jsonplaceholder.typicode.com", path: "/posts/{{.args.p1}}/comments")
  f2(p1: Int!): RootType2 @http(baseURL: "https://jsonplaceholder.typicode.com", path: "/posts/{{.args.p1}}")
  f3(q: String): RootType3 @http(baseURL: "https://dummyjson.com", path: "/products/search", query: [{key: "q", value: "{{.args.q}}"}])
}

type Review {
  comment: String
  date: String
  rating: Int
  reviewerEmail: String
  reviewerName: String
}

type RootType1 {
  body: String
  email: String
  id: Int
  name: String
  postId: Int
}

type RootType2 {
  body: String
  id: Int
  title: String
  userId: Int
}

type RootType3 {
  limit: Int
  products: [Product]
  skip: Int
  total: Int
}
