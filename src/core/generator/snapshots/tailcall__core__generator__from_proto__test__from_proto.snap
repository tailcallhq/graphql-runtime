---
source: src/core/generator/from_proto.rs
expression: result
---
schema @server @upstream {
  query: Query
}

input GEN__greetings__HelloRequest {
  name: String
}

"""
The request message containing the user's name.
"""
input GEN__greetings_a__b__HelloRequest {
  name: String
}

input GEN__news__MultipleNewsId {
  ids: [GEN__news__NewsId]
}

input GEN__news__NewsId {
  id: Int
}

input GEN__news__NewsInput {
  body: String
  id: Int
  postImage: String
  status: GEN__news__Status
  title: String
}

enum GEN__news__Status {
  DELETED
  DRAFT
  PUBLISHED
}

type GEN__greetings__HelloReply {
  message: String
}

  """
  The response message containing the greetings
  """
type GEN__greetings_a__b__HelloReply {
  message: String
}

type GEN__news__News {
  body: String
  id: Int
  postImage: String
  status: GEN__news__Status
  title: String
}

type GEN__news__NewsList {
  news: [GEN__news__News]
}

type Query {
  """
  Sends a greeting
  """
  GEN__greetings_a__b__Greeter__SayHello(helloRequest: GEN__greetings_a__b__HelloRequest!): GEN__greetings_a__b__HelloReply @grpc(url: "http://localhost:50051", body: "{{.args.helloRequest}}", method: "greetings_a.b.Greeter.SayHello")
  """
  Sends a greeting
  """
  GEN__greetings_b__c__Greeter__SayHello(helloRequest: GEN__greetings__HelloRequest!): GEN__greetings__HelloReply @grpc(url: "http://localhost:50051", body: "{{.args.helloRequest}}", method: "greetings_b.c.Greeter.SayHello")
  GEN__news__NewsService__AddNews(news: GEN__news__NewsInput!): GEN__news__News @grpc(url: "http://localhost:50051", body: "{{.args.news}}", method: "news.NewsService.AddNews")
  GEN__news__NewsService__DeleteNews(newsId: GEN__news__NewsId!): Empty @grpc(url: "http://localhost:50051", body: "{{.args.newsId}}", method: "news.NewsService.DeleteNews")
  GEN__news__NewsService__EditNews(news: GEN__news__NewsInput!): GEN__news__News @grpc(url: "http://localhost:50051", body: "{{.args.news}}", method: "news.NewsService.EditNews")
  GEN__news__NewsService__GetAllNews: GEN__news__NewsList @grpc(url: "http://localhost:50051", method: "news.NewsService.GetAllNews")
  GEN__news__NewsService__GetMultipleNews(multipleNewsId: GEN__news__MultipleNewsId!): GEN__news__NewsList @grpc(url: "http://localhost:50051", body: "{{.args.multipleNewsId}}", method: "news.NewsService.GetMultipleNews")
  GEN__news__NewsService__GetNews(newsId: GEN__news__NewsId!): GEN__news__News @grpc(url: "http://localhost:50051", body: "{{.args.newsId}}", method: "news.NewsService.GetNews")
}
