---
source: tests/execution_spec.rs
expression: merged
---
schema @server @upstream {
  query: Query
}

type Query {
  andFalse1: Boolean @expr(body: {and: [{const: false}, {const: true}]})
  andFalse2: Boolean @expr(body: {and: [{const: false}, {const: false}]})
  andFalse3: Boolean @expr(body: {and: [{const: true}, {const: false}, {const: true}]})
  andTrue1: Boolean @expr(body: {and: [{const: true}, {const: true}, {const: true}]})
  andTrue2: Boolean @expr(body: {and: [{const: true}, {const: true}]})
  condOne: Int @expr(body: {cond: [{const: 0}, [[{const: true}, {const: 1}], [{const: true}, {const: 2}]]]})
  condTwo: Int @expr(body: {cond: [{const: 0}, [[{const: false}, {const: 1}], [{const: true}, {const: 2}]]]})
  condZero: Int @expr(body: {cond: [{const: 0}, [[{const: false}, {const: 1}], [{const: false}, {const: 2}]]]})
  defaultToTrue: Boolean @expr(body: {defaultTo: [{const: ""}, {const: true}]})
  defaultToZero: Int @expr(body: {defaultTo: [{const: null}, {const: 0}]})
  ifOne: Int @expr(body: {if: {cond: {const: false}, else: {const: 1}, then: {const: 0}}})
  ifZero: Int @expr(body: {if: {cond: {const: true}, else: {const: 1}, then: {const: 0}}})
  isEmptyFalse1: Boolean @expr(body: {isEmpty: {const: 10}})
  isEmptyFalse2: Boolean @expr(body: {isEmpty: {const: false}})
  isEmptyFalse3: Boolean @expr(body: {isEmpty: {const: "abc"}})
  isEmptyTrue1: Boolean @expr(body: {isEmpty: {const: null}})
  isEmptyTrue2: Boolean @expr(body: {isEmpty: {const: ""}})
  isEmptyTrue3: Boolean @expr(body: {isEmpty: {const: []}})
  isEmptyTrue4: Boolean @expr(body: {isEmpty: {const: {}}})
  notFalse1: Boolean @expr(body: {not: {const: true}})
  notFalse2: Boolean @expr(body: {not: {const: 1}})
  notTrue: Boolean @expr(body: {not: {const: false}})
  orFalse1: Boolean @expr(body: {or: [{const: false}, {const: false}]})
  orFalse2: Boolean @expr(body: {or: [{const: false}, {const: false}, {const: false}]})
  orTrue1: Boolean @expr(body: {or: [{const: false}, {const: true}]})
  orTrue2: Boolean @expr(body: {or: [{const: true}, {const: false}]})
  orTrue3: Boolean @expr(body: {or: [{const: false}, {const: true}, {const: false}]})
}
