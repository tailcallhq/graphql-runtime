schema
  @server(port: 8000, graphiql: true, hostname: "0.0.0.0")
  @upstream(baseURL: "http://jsonplaceholder.typicode.com", httpCache: true) {
  query: Query
}

type Query {
  posts: [Post] @http(path: "/posts")
  user(id: Int!): User @http(path: "/users/{{args.id}}")
  userPosts(id: ID!): [Post] @http(path: "/posts", query: [{key: "userId", value: "{{args.id}}"}])
  userGraphQL(id: Int): User
    @graphQL(baseURL: "http://upstream/graphql", name: "user", args: [{key: "id", value: "{{args.id}}"}])
  userGraphQLHeaders(id: Int!): User
    @graphQL(baseURL: "http://upstream/graphql", name: "user", headers: [{key: "id", value: "{{args.id}}"}])
}

type UserWithPosts {
  id: Int!
  name: String!
  posts: [Post] @call(query: "userPosts", args: {id: "{{value.id}}"})
}

type User {
  id: Int!
  name: String!
  username: String!
  email: String!
  phone: String
  website: String
}

type Post {
  id: Int
  userId: Int!
  title: String
  body: String
  user: User @call(query: "user", args: {id: "{{value.userId}}"})
  userGraphQL: User @call(query: "userGraphQL", args: {id: "{{value.userId}}"})
  userGraphQLHeaders: User @call(query: "userGraphQLHeaders", args: {id: "{{value.userId}}"})
}
