config: !file tests/http/config/auth-jwt-const.graphql
name: Auth with JWT loaded from const

assert:
  - request:
      method: POST
      url: http://localhost:8080/graphql
      body:
        query: |
          query {
            scalar
            nested {
              name
            }
          }
    response:
      body:
        data:
          scalar: data from public scalar
          nested:
            name: protected nested name

  - request:
      method: POST
      url: http://localhost:8080/graphql
      body:
        query: |
          query {
            protectedScalar
          }
    response:
      body:
        data: null
        errors:
          - message: Haven't found auth parameters
            locations:
              - column: 3
                line: 2

  - request:
      method: POST
      url: http://localhost:8080/graphql
      headers:
        Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6Ikk0OHFNSnA1NjZTU0tRb2dZWFl0SEJvOXE2WmNFS0hpeE5QZU5veFYxYzgifQ.eyJleHAiOjIwMTkwNTY0NDEuMCwiaXNzIjoibWUiLCJzdWIiOiJ5b3UiLCJhdWQiOlsidGhlbSJdfQ.cU-hJgVGWxK3-IBggYBChhf3FzibBKjuDLtq2urJ99FVXIGZls0VMXjyNW7yHhLLuif_9t2N5UIUIq-hwXVv7rrGRPCGrlqKU0jsUH251Spy7_ppG5_B2LsG3cBJcwkD4AVz8qjT3AaE_vYZ4WnH-CQ-F5Vm7wiYZgbdyU8xgKoH85KAxaCdJJlYOi8mApE9_zcdmTNJrTNd9sp7PX3lXSUu9AWlrZkyO-HhVbXFunVtfduDuTeVXxP8iw1wt6171CFbPmQJU_b3xCornzyFKmhSc36yvlDfoPPclWmWeyOfFEp9lVhQm0WhfDK7GiuRtaOxD-tOvpTjpcoZBeJb7bSg2OsneyeM_33a0WoPmjHw8WIxbroJz_PrfE72_TzbcTSDttKAv_e75PE48Vvx0661miFv4Gq8RBzMl2G3pQMEVCOm83v7BpodfN_YVJcqZJjVHMA70TZQ4K3L4_i9sIK9jJFfwEDVM7nsDnUu96n4vKs1fVvAuieCIPAJrfNOUMy7TwLvhnhUARsKnzmtNNrJuDhhBx-X93AHcG3micXgnqkFdKn6-ZUZ63I2KEdmjwKmLTRrv4n4eZKrRN-OrHPI4gLxJUhmyPAHzZrikMVBcDYfALqyki5SeKkwd4v0JAm87QzR4YwMdKErr0Xa5JrZqHGe2TZgVO4hIc-KrPw
      body:
        query: |
          query {
            protectedScalar
            nested {
              name
              protected
            }
            protectedType {
              name
              nested
            }
          }
    response:
      body:
        data:
          protectedScalar: data from protected scalar
          nested:
            name: protected nested name
            protected: protected nested
          protectedType:
            name: protected type name
            nested: protected type nested
