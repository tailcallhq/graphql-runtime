---
name: With call operator
config: !file tests/http/config/call.graphql
runner: only

mock:
  - request:
      url: http://jsonplaceholder.typicode.com/users/1
    response:
      body:
        id: 1
        name: foo
  - request:
      url: http://jsonplaceholder.typicode.com/users
      headers:
        id: 1
    response:
      body:
        id: 1
        name: "Ervin Howell"
  - request:
      url: http://jsonplaceholder.typicode.com/posts
    response:
      body:
        - id: 1
          userId: 1
  - request:
      url: http://upstream/graphql
      method: POST
      body: '{ "query": "query { user(id: 1) { name } }" }'
    response:
      body:
        data:
          user:
            name: "Leanne Graham"
  - request:
      url: http://upstream/graphql
      method: POST
      body: '{ "query": "query { user { name } }" }'
      headers:
        id: 1
    response:
      body:
        data:
          user:
            name: "Leanne Graham"
  # - request:
  #     url: http://jsonplaceholder.typicode.com/users
  #   response:
  #     body:
  #       - id: 1
  #         name: foo
  # - request:
  #     url: http://jsonplaceholder.typicode.com/posts?userId=1
  #   response:
  #     body:
  #       - id: 1
  #         userId: 1
  #         title: bar
  #         body: baz
  #       - id: 2
  #         userId: 1
  #         title: qux
  #         body: quux

assert:
  - request:
      method: POST
      url: http://localhost:8080/graphql
      body:
        query: "query { posts { user { name } } }"
    response:
      body:
        data:
          posts:
            - user:
                name: foo
  - request:
      method: POST
      url: http://localhost:8080/graphql
      body:
        query: "query { posts { userGraphQLHeaders { name } } }"
      headers:
        id: 1
    response:
      body:
        data:
          posts:
            - userGraphQLHeaders:
                name: "Leanne Graham"
  - request:
      method: POST
      url: http://localhost:8080/graphql
      body:
        query: "query { posts { userGraphQLHeaders { name } } }"
    response:
      body:
        data:
          posts:
            - userGraphQLHeaders:
                name: "Leanne Graham"
  - request:
      method: POST
      url: http://localhost:8080/graphql
      body:
        query: "query { posts { userHttpHeaders { name } } }"
    response:
      body:
        data:
          posts:
            - userHttpHeaders:
                name: "Ervin Howell"
  # - request:
  #     method: POST
  #     url: http://localhost:8080/graphql
  #     body:
  #       query: "query { userPosts(id: 1) { title } }"
  #   response:
  #     body:
  #       data:
  #         userPosts:
  #           - title: bar
  #           - title: qux
  # - request:
  #     method: POST
  #     url: http://localhost:8080/graphql
  #     body:
  #       query: "query { userWithPosts { posts { title } } }"
  #   response:
  #     body:
  #       data:
  #         userWithPosts:
  #           posts:
  #             - title: bar
  #             - title: qux
