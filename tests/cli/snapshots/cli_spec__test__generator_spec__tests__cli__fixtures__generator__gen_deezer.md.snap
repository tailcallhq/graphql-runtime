---
source: tests/cli/gen.rs
expression: config.to_sdl()
---
schema @server @upstream {
  query: Query
}

type Album {
  data: [JSON]
  total: Int
}

type Artist {
  id: Int
  link: String
  name: String
  picture: String
  picture_big: String
  picture_medium: String
  picture_small: String
  picture_xl: String
  radio: Boolean
  tracklist: String
  type: String
}

type Chart {
  albums: Album
  artists: GEN__169
  playlists: GEN__181
  podcasts: Podcast
  tracks: GEN__166
}

type Contributor {
  id: Int
  link: String
  name: String
  picture: String
  picture_big: String
  picture_medium: String
  picture_small: String
  picture_xl: String
  radio: Boolean
  role: String
  share: String
  tracklist: String
  type: String
}

type Creator {
  id: Int
  name: String
  tracklist: String
  type: String
}

type Datum {
  album: GEN__M2
  artist: GEN__42
  duration: Int
  explicit_content_cover: Int
  explicit_content_lyrics: Int
  explicit_lyrics: Boolean
  id: Int
  link: String
  md5_image: String
  preview: String
  rank: Int
  readable: Boolean
  time_add: Int
  title: String
  title_short: String
  title_version: String
  type: String
}

type Editorial {
  data: [GEN__185]
  total: Int
}

type GEN__165 {
  album: GEN__M2
  artist: Artist
  duration: Int
  explicit_content_cover: Int
  explicit_content_lyrics: Int
  explicit_lyrics: Boolean
  id: Int
  link: String
  md5_image: String
  position: Int
  preview: String
  rank: Int
  title: String
  title_short: String
  title_version: String
  type: String
}

type GEN__166 {
  data: [GEN__165]
  total: Int
}

type GEN__168 {
  id: Int
  link: String
  name: String
  picture: String
  picture_big: String
  picture_medium: String
  picture_small: String
  picture_xl: String
  position: Int
  radio: Boolean
  tracklist: String
  type: String
}

type GEN__169 {
  data: [GEN__168]
  total: Int
}

type GEN__180 {
  checksum: String
  creation_date: String
  id: Int
  link: String
  md5_image: String
  nb_tracks: Int
  picture: String
  picture_big: String
  picture_medium: String
  picture_small: String
  picture_type: String
  picture_xl: String
  public: Boolean
  title: String
  tracklist: String
  type: String
  user: Creator
}

type GEN__181 {
  data: [GEN__180]
  total: Int
}

type GEN__182 {
  available: Boolean
  description: String
  fans: Int
  id: Int
  link: String
  picture: String
  picture_big: String
  picture_medium: String
  picture_small: String
  picture_xl: String
  share: String
  title: String
  type: String
}

type GEN__185 {
  id: Int
  name: String
  picture: String
  picture_big: String
  picture_medium: String
  picture_small: String
  picture_xl: String
  type: String
}

type GEN__2 {
  id: Int
  link: String
  name: String
  picture: String
  picture_big: String
  picture_medium: String
  picture_small: String
  picture_xl: String
  radio: Boolean
  share: String
  tracklist: String
  type: String
}

type GEN__3 {
  cover: String
  cover_big: String
  cover_medium: String
  cover_small: String
  cover_xl: String
  id: Int
  link: String
  md5_image: String
  release_date: String
  title: String
  tracklist: String
  type: String
}

type GEN__37 {
  album: GEN__M2
  artist: Creator
  duration: Int
  explicit_content_cover: Int
  explicit_content_lyrics: Int
  explicit_lyrics: Boolean
  id: Int
  link: String
  md5_image: String
  preview: String
  rank: Int
  readable: Boolean
  title: String
  title_short: String
  title_version: String
  type: String
}

type GEN__38 {
  data: [GEN__37]
}

type GEN__39 {
  artist: GEN__8
  available: Boolean
  contributors: [Contributor]
  cover: String
  cover_big: String
  cover_medium: String
  cover_small: String
  cover_xl: String
  duration: Int
  explicit_content_cover: Int
  explicit_content_lyrics: Int
  explicit_lyrics: Boolean
  fans: Int
  genre_id: Int
  genres: Genre
  id: Int
  label: String
  link: String
  md5_image: String
  nb_tracks: Int
  record_type: String
  release_date: String
  share: String
  title: String
  tracklist: String
  tracks: GEN__38
  type: String
  upc: String
}

type GEN__4 {
  album: GEN__3
  artist: GEN__2
  available_countries: [String]
  bpm: Int
  contributors: [Contributor]
  disk_number: Int
  duration: Int
  explicit_content_cover: Int
  explicit_content_lyrics: Int
  explicit_lyrics: Boolean
  gain: Int
  id: Int
  isrc: String
  link: String
  md5_image: String
  preview: String
  rank: Int
  readable: Boolean
  release_date: String
  share: String
  title: String
  title_short: String
  title_version: String
  track_position: Int
  type: String
}

type GEN__40 {
  id: Int
  link: String
  name: String
  nb_album: Int
  nb_fan: Int
  picture: String
  picture_big: String
  picture_medium: String
  picture_small: String
  picture_xl: String
  radio: Boolean
  share: String
  tracklist: String
  type: String
}

type GEN__42 {
  id: Int
  link: String
  name: String
  tracklist: String
  type: String
}

type GEN__5 {
  id: Int
  name: String
  picture: String
  type: String
}

type GEN__8 {
  id: Int
  name: String
  picture: String
  picture_big: String
  picture_medium: String
  picture_small: String
  picture_xl: String
  tracklist: String
  type: String
}

type GEN__M2 {
  cover: String
  cover_big: String
  cover_medium: String
  cover_small: String
  cover_xl: String
  id: Int
  md5_image: String
  title: String
  tracklist: String
  type: String
}

type Genre {
  data: [GEN__5]
}

type Playlist {
  checksum: String
  collaborative: Boolean
  creation_date: String
  creator: Creator
  description: String
  duration: Int
  fans: Int
  id: Int
  is_loved_track: Boolean
  link: String
  md5_image: String
  nb_tracks: Int
  picture: String
  picture_big: String
  picture_medium: String
  picture_small: String
  picture_type: String
  picture_xl: String
  public: Boolean
  share: String
  title: String
  tracklist: String
  tracks: Track
  type: String
}

type Podcast {
  data: [GEN__182]
  total: Int
}

type Query {
  album(GEN__1: Int!): GEN__39 @http(url: "http://example.com/album/%7B%7B.args.GEN__1%7D%7D")
  artist(GEN__1: Int!): GEN__40 @http(url: "http://example.com/artist/%7B%7B.args.GEN__1%7D%7D")
  chart: Chart @http(url: "http://example.com/chart")
  editorial: Editorial @http(url: "http://example.com/editorial")
  playlist(GEN__1: Int!): Playlist @http(url: "http://example.com/playlist/%7B%7B.args.GEN__1%7D%7D")
  search(q: String): Search @http(url: "http://example.com/search", query: [{key: "q", value: "{{.args.q}}"}])
  track(GEN__1: Int!): GEN__4 @http(url: "http://example.com/track/%7B%7B.args.GEN__1%7D%7D")
  user(GEN__1: Int!): User @http(url: "http://example.com/user/%7B%7B.args.GEN__1%7D%7D")
}

type Search {
  data: [JSON]
  next: String
  total: Int
}

type Track {
  checksum: String
  data: [Datum]
}

type User {
  country: String
  id: Int
  link: String
  name: String
  picture: String
  picture_big: String
  picture_medium: String
  picture_small: String
  picture_xl: String
  tracklist: String
  type: String
}
