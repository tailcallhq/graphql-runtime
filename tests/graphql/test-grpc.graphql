#> server-sdl
schema @server(port: 8000) @upstream(baseURL: "http://localhost:50051", batch: {delay: 10, headers: [], maxSize: 1000}, httpCache: true) {
  query: Query
}

input NewsInput {
  body: String
  id: Int
  postImage: String
  title: String
}

type News {
  body: String
  id: Int
  postImage: String
  title: String
}

type NewsData {
  news: [News]!
}

type Query {
  news: NewsData! @grpc(method: "GetAllNews", protoPath: "src/grpc/tests/news.proto", service: "NewsService")
  newsById(news: NewsInput!): News! @grpc(body: "{{args.news}}", method: "GetNews", protoPath: "src/grpc/tests/news.proto", service: "NewsService")
  newsByIdBatch(news: NewsInput!): News! @grpc(body: "{{args.news}}", groupBy: ["news", "id"], method: "GetMultipleNews", protoPath: "src/grpc/tests/news.proto", service: "NewsService")
}

#> client-sdl
type News {
  body: String
  id: Int
  postImage: String
  title: String
}

type NewsData {
  news: [News]!
}

input NewsInput {
  body: String
  id: Int
  postImage: String
  title: String
}

type Query {
  news: NewsData!
  newsById(news: NewsInput!): News!
  newsByIdBatch(news: NewsInput!): News!
}

schema {
  query: Query
}
