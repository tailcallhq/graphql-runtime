#> server-sdl
schema {
  query: Query
}

type User {
  id: ID!
}

type Query {
  user_access_headers_vars(id: ID!): User
    @http(path: "/user/{{args.id}}/{{headers.garbage}}/{{vars.garbage}}", baseURL: "http://localhost:8080")
  user_list_arg(id: [ID]): User @http(path: "/user/{{args.id}}", baseURL: "http://localhost:8080")
  user_nullable_arg(id: ID): User @http(path: "/user/{{args.id}}", baseURL: "http://localhost:8080")
  user_undefined_arg(id: ID): User @http(path: "/user/{{args.uid}}", baseURL: "http://localhost:8080")
}

type Post {
  id: Int!
  userId: Int
  user: User @http(path: "/users/{{value.id}}", baseURL: "http://localhost:8080")
  user_arg: User @http(path: "/users/{{args.id}}", baseURL: "http://localhost:8080")
  user_invalid_directive: User @http(path: "/users/{{valu.userId}}", baseURL: "http://localhost:8080")
  user_non_scalar: User @http(path: "/users/{{value.user.id}}", baseURL: "http://localhost:8080")
  user_null_value: User @http(path: "/users/{{value.userId}}", baseURL: "http://localhost:8080")
  # nullable values are allowed in queries
  user_null_value_query: User
    @http(path: "/users", query: [{key: "id", value: "{{value.id}}"}], baseURL: "http://localhost:8080")
  user_undefined_value: User @http(path: "/users/{{value.userid}}", baseURL: "http://localhost:8080")
  # but not undefined values
  user_undefined_value_query: User
    @http(path: "/users", query: [{key: "id", value: "{{value.userid}}"}], baseURL: "http://localhost:8080")
}

#> client-sdl
type Failure @error(message: "no argument 'id' found", trace: ["Post", "user_arg"])
type Failure @error(message: "unknown template directive 'valu'", trace: ["Post", "user_invalid_directive"])
type Failure @error(message: "value 'user' is not of a scalar type", trace: ["Post", "user_non_scalar"])
type Failure @error(message: "value 'userId' is a nullable type", trace: ["Post", "user_null_value"])
type Failure @error(message: "no value 'userid' found", trace: ["Post", "user_undefined_value"])
type Failure @error(message: "no value 'userid' found", trace: ["Post", "user_undefined_value_query", "id"])
type Failure @error(message: "can't use list type 'id' here", trace: ["Query", "user_list_arg"])
type Failure @error(message: "argument 'id' is a nullable type", trace: ["Query", "user_nullable_arg"])
type Failure @error(message: "no argument 'uid' found", trace: ["Query", "user_undefined_arg"])
