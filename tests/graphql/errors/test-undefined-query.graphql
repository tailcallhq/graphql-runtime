#> server-sdl
schema @server @upstream(baseURL: "http://jsonplacheholder.typicode.com") {
  query: Query
}

type Post {
  id: Int
  user: User! @http(path: "/users", query: [{key: "id", value: "{{value.test.id}}"}])
  nested: User! @http(path: "/users", query: [{key: "id", value: "{{value.user.nested.test}}"}])
  innerNested: User! @http(path: "/users", query: [{key: "id", value: "{{value.user.nested.inner.test.id}}"}])
  innerIdNested: User! @http(path: "/users", query: [{key: "id", value: "{{value.user.nested.inner.id.test}}"}])
}

type Query {
  posts: [Post] @http(path: "/posts")
}

type Inner {
  id: Int!
}

type NestedUser {
  id: Int!
  name: String
  inner: Inner
}

type User {
  id: Int!
  name: String
  nested: NestedUser
}

#> client-sdl
type Failure
  @error(message: "no type 'user.nested.inner.id.test' found", trace: ["Post", "innerIdNested", "@http", "query"])
type Failure
  @error(message: "no value 'user.nested.inner.test' found", trace: ["Post", "innerNested", "@http", "query"])
type Failure @error(message: "no value 'user.nested.test' found", trace: ["Post", "nested", "@http", "query"])
type Failure @error(message: "no value 'test' found", trace: ["Post", "user", "@http", "query"])
